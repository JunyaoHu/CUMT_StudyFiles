Grammar

    0 $accept: calclist $end

    1 stmt: IF exp THEN list
    2     | IF exp THEN list ELSE list
    3     | WHILE exp DO list
    4     | IF exp THEN '{' list '}'
    5     | IF exp THEN '{' list '}' ELSE '{' list '}'
    6     | WHILE exp DO '{' list '}'
    7     | exp

    8 list: /* empty */
    9     | stmt ';' list
   10     | stmt

   11 exp: exp CMP exp
   12    | exp '+' exp
   13    | exp '-' exp
   14    | exp '*' exp
   15    | exp '/' exp
   16    | '|' exp
   17    | '(' exp ')'
   18    | '-' exp
   19    | NUMBER
   20    | FUNC '(' explist ')'
   21    | NAME
   22    | NAME '=' exp
   23    | NAME '(' explist ')'

   24 explist: exp
   25        | exp ',' explist

   26 symlist: NAME
   27        | NAME ',' symlist

   28 calclist: /* empty */
   29         | calclist stmt ';' EOL
   30         | calclist LET NAME '(' symlist ')' '{' list '}' EOL
   31         | calclist error EOL


Terminals, with rules where they appear

$end (0) 0
'(' (40) 17 20 23 30
')' (41) 17 20 23 30
'*' (42) 14
'+' (43) 12
',' (44) 25 27
'-' (45) 13 18
'/' (47) 15
';' (59) 9 29
'=' (61) 22
'{' (123) 4 5 6 30
'|' (124) 16
'}' (125) 4 5 6 30
error (256) 31
NUMBER (258) 19
NAME (259) 21 22 23 26 27 30
FUNC (260) 20
EOL (261) 29 30 31
IF (262) 1 2 4 5
THEN (263) 1 2 4 5
ELSE (264) 2 5
WHILE (265) 3 6
DO (266) 3 6
LET (267) 30
CMP (268) 11
UMINUS (269)
LOWER_THAN_SEMICOLON (270)
LOWER_THAN_ELSE (271)


Nonterminals, with rules where they appear

$accept (29)
    on left: 0
stmt (30)
    on left: 1 2 3 4 5 6 7, on right: 9 10 29
list (31)
    on left: 8 9 10, on right: 1 2 3 4 5 6 9 30
exp (32)
    on left: 11 12 13 14 15 16 17 18 19 20 21 22 23, on right: 1 2
    3 4 5 6 7 11 12 13 14 15 16 17 18 22 24 25
explist (33)
    on left: 24 25, on right: 20 23 25
symlist (34)
    on left: 26 27, on right: 27 30
calclist (35)
    on left: 28 29 30 31, on right: 0 29 30 31


state 0

    0 $accept: . calclist $end

    $default  reduce using rule 28 (calclist)

    calclist  go to state 1


state 1

    0 $accept: calclist . $end
   29 calclist: calclist . stmt ';' EOL
   30         | calclist . LET NAME '(' symlist ')' '{' list '}' EOL
   31         | calclist . error EOL

    $end    shift, and go to state 2
    error   shift, and go to state 3
    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    LET     shift, and go to state 9
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    stmt  go to state 13
    exp   go to state 14


state 2

    0 $accept: calclist $end .

    $default  accept


state 3

   31 calclist: calclist error . EOL

    EOL  shift, and go to state 15


state 4

   19 exp: NUMBER .

    $default  reduce using rule 19 (exp)


state 5

   21 exp: NAME .
   22    | NAME . '=' exp
   23    | NAME . '(' explist ')'

    '='  shift, and go to state 16
    '('  shift, and go to state 17

    $default  reduce using rule 21 (exp)


state 6

   20 exp: FUNC . '(' explist ')'

    '('  shift, and go to state 18


state 7

    1 stmt: IF . exp THEN list
    2     | IF . exp THEN list ELSE list
    4     | IF . exp THEN '{' list '}'
    5     | IF . exp THEN '{' list '}' ELSE '{' list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 19


state 8

    3 stmt: WHILE . exp DO list
    6     | WHILE . exp DO '{' list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 20


state 9

   30 calclist: calclist LET . NAME '(' symlist ')' '{' list '}' EOL

    NAME  shift, and go to state 21


state 10

   18 exp: '-' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 22


state 11

   16 exp: '|' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 23


state 12

   17 exp: '(' . exp ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 24


state 13

   29 calclist: calclist stmt . ';' EOL

    ';'  shift, and go to state 25


state 14

    7 stmt: exp .
   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp

    CMP  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 7 (stmt)


state 15

   31 calclist: calclist error EOL .

    $default  reduce using rule 31 (calclist)


state 16

   22 exp: NAME '=' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 31


state 17

   23 exp: NAME '(' . explist ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp      go to state 32
    explist  go to state 33


state 18

   20 exp: FUNC '(' . explist ')'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp      go to state 32
    explist  go to state 34


state 19

    1 stmt: IF exp . THEN list
    2     | IF exp . THEN list ELSE list
    4     | IF exp . THEN '{' list '}'
    5     | IF exp . THEN '{' list '}' ELSE '{' list '}'
   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp

    THEN  shift, and go to state 35
    CMP   shift, and go to state 26
    '+'   shift, and go to state 27
    '-'   shift, and go to state 28
    '*'   shift, and go to state 29
    '/'   shift, and go to state 30


state 20

    3 stmt: WHILE exp . DO list
    6     | WHILE exp . DO '{' list '}'
   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp

    DO   shift, and go to state 36
    CMP  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30


state 21

   30 calclist: calclist LET NAME . '(' symlist ')' '{' list '}' EOL

    '('  shift, and go to state 37


state 22

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp
   18    | '-' exp .

    $default  reduce using rule 18 (exp)


state 23

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp
   16    | '|' exp .

    $default  reduce using rule 16 (exp)


state 24

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp
   17    | '(' exp . ')'

    CMP  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    ')'  shift, and go to state 38


state 25

   29 calclist: calclist stmt ';' . EOL

    EOL  shift, and go to state 39


state 26

   11 exp: exp CMP . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 40


state 27

   12 exp: exp '+' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 41


state 28

   13 exp: exp '-' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 42


state 29

   14 exp: exp '*' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 43


state 30

   15 exp: exp '/' . exp

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp  go to state 44


state 31

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp
   22    | NAME '=' exp .

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 22 (exp)


state 32

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp
   24 explist: exp .
   25        | exp . ',' explist

    CMP  shift, and go to state 26
    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30
    ','  shift, and go to state 45

    $default  reduce using rule 24 (explist)


state 33

   23 exp: NAME '(' explist . ')'

    ')'  shift, and go to state 46


state 34

   20 exp: FUNC '(' explist . ')'

    ')'  shift, and go to state 47


state 35

    1 stmt: IF exp THEN . list
    2     | IF exp THEN . list ELSE list
    4     | IF exp THEN . '{' list '}'
    5     | IF exp THEN . '{' list '}' ELSE '{' list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '{'     shift, and go to state 48
    '('     shift, and go to state 12

    $default  reduce using rule 8 (list)

    stmt  go to state 49
    list  go to state 50
    exp   go to state 14


state 36

    3 stmt: WHILE exp DO . list
    6     | WHILE exp DO . '{' list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '{'     shift, and go to state 51
    '('     shift, and go to state 12

    $default  reduce using rule 8 (list)

    stmt  go to state 49
    list  go to state 52
    exp   go to state 14


state 37

   30 calclist: calclist LET NAME '(' . symlist ')' '{' list '}' EOL

    NAME  shift, and go to state 53

    symlist  go to state 54


state 38

   17 exp: '(' exp ')' .

    $default  reduce using rule 17 (exp)


state 39

   29 calclist: calclist stmt ';' EOL .

    $default  reduce using rule 29 (calclist)


state 40

   11 exp: exp . CMP exp
   11    | exp CMP exp .
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp

    '+'  shift, and go to state 27
    '-'  shift, and go to state 28
    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    CMP  error (nonassociative)

    $default  reduce using rule 11 (exp)


state 41

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   12    | exp '+' exp .
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 12 (exp)


state 42

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   13    | exp '-' exp .
   14    | exp . '*' exp
   15    | exp . '/' exp

    '*'  shift, and go to state 29
    '/'  shift, and go to state 30

    $default  reduce using rule 13 (exp)


state 43

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   14    | exp '*' exp .
   15    | exp . '/' exp

    $default  reduce using rule 14 (exp)


state 44

   11 exp: exp . CMP exp
   12    | exp . '+' exp
   13    | exp . '-' exp
   14    | exp . '*' exp
   15    | exp . '/' exp
   15    | exp '/' exp .

    $default  reduce using rule 15 (exp)


state 45

   25 explist: exp ',' . explist

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    exp      go to state 32
    explist  go to state 55


state 46

   23 exp: NAME '(' explist ')' .

    $default  reduce using rule 23 (exp)


state 47

   20 exp: FUNC '(' explist ')' .

    $default  reduce using rule 20 (exp)


state 48

    4 stmt: IF exp THEN '{' . list '}'
    5     | IF exp THEN '{' . list '}' ELSE '{' list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 8 (list)

    stmt  go to state 49
    list  go to state 56
    exp   go to state 14


state 49

    9 list: stmt . ';' list
   10     | stmt .

    ';'  shift, and go to state 57

    $default  reduce using rule 10 (list)


state 50

    1 stmt: IF exp THEN list .
    2     | IF exp THEN list . ELSE list

    ELSE  shift, and go to state 58

    $default  reduce using rule 1 (stmt)


state 51

    6 stmt: WHILE exp DO '{' . list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 8 (list)

    stmt  go to state 49
    list  go to state 59
    exp   go to state 14


state 52

    3 stmt: WHILE exp DO list .

    $default  reduce using rule 3 (stmt)


state 53

   26 symlist: NAME .
   27        | NAME . ',' symlist

    ','  shift, and go to state 60

    $default  reduce using rule 26 (symlist)


state 54

   30 calclist: calclist LET NAME '(' symlist . ')' '{' list '}' EOL

    ')'  shift, and go to state 61


state 55

   25 explist: exp ',' explist .

    $default  reduce using rule 25 (explist)


state 56

    4 stmt: IF exp THEN '{' list . '}'
    5     | IF exp THEN '{' list . '}' ELSE '{' list '}'

    '}'  shift, and go to state 62


state 57

    9 list: stmt ';' . list

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 8 (list)

    stmt  go to state 49
    list  go to state 63
    exp   go to state 14


state 58

    2 stmt: IF exp THEN list ELSE . list

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 8 (list)

    stmt  go to state 49
    list  go to state 64
    exp   go to state 14


state 59

    6 stmt: WHILE exp DO '{' list . '}'

    '}'  shift, and go to state 65


state 60

   27 symlist: NAME ',' . symlist

    NAME  shift, and go to state 53

    symlist  go to state 66


state 61

   30 calclist: calclist LET NAME '(' symlist ')' . '{' list '}' EOL

    '{'  shift, and go to state 67


state 62

    4 stmt: IF exp THEN '{' list '}' .
    5     | IF exp THEN '{' list '}' . ELSE '{' list '}'

    ELSE  shift, and go to state 68

    $default  reduce using rule 4 (stmt)


state 63

    9 list: stmt ';' list .

    $default  reduce using rule 9 (list)


state 64

    2 stmt: IF exp THEN list ELSE list .

    $default  reduce using rule 2 (stmt)


state 65

    6 stmt: WHILE exp DO '{' list '}' .

    $default  reduce using rule 6 (stmt)


state 66

   27 symlist: NAME ',' symlist .

    $default  reduce using rule 27 (symlist)


state 67

   30 calclist: calclist LET NAME '(' symlist ')' '{' . list '}' EOL

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 8 (list)

    stmt  go to state 49
    list  go to state 69
    exp   go to state 14


state 68

    5 stmt: IF exp THEN '{' list '}' ELSE . '{' list '}'

    '{'  shift, and go to state 70


state 69

   30 calclist: calclist LET NAME '(' symlist ')' '{' list . '}' EOL

    '}'  shift, and go to state 71


state 70

    5 stmt: IF exp THEN '{' list '}' ELSE '{' . list '}'

    NUMBER  shift, and go to state 4
    NAME    shift, and go to state 5
    FUNC    shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    '-'     shift, and go to state 10
    '|'     shift, and go to state 11
    '('     shift, and go to state 12

    $default  reduce using rule 8 (list)

    stmt  go to state 49
    list  go to state 72
    exp   go to state 14


state 71

   30 calclist: calclist LET NAME '(' symlist ')' '{' list '}' . EOL

    EOL  shift, and go to state 73


state 72

    5 stmt: IF exp THEN '{' list '}' ELSE '{' list . '}'

    '}'  shift, and go to state 74


state 73

   30 calclist: calclist LET NAME '(' symlist ')' '{' list '}' EOL .

    $default  reduce using rule 30 (calclist)


state 74

    5 stmt: IF exp THEN '{' list '}' ELSE '{' list '}' .

    $default  reduce using rule 5 (stmt)
