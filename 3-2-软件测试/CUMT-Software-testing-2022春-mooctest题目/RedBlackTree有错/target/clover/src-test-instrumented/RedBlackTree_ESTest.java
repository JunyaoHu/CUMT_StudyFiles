/* $$ This file has been instrumented by Clover 4.4.1#2019101123313948 $$ *////*
// * This file was automatically generated by EvoSuite
// * Tue Jun 07 07:11:33 GMT 2022
// */
//
//package net.mooctest;
//
//import org.junit.Test;
//import static org.junit.Assert.*;
//import static org.evosuite.runtime.EvoAssertions.*;
//import net.mooctest.Node;
//import net.mooctest.RedBlackTree;
//import org.evosuite.runtime.EvoRunner;
//import org.evosuite.runtime.EvoRunnerParameters;
//import org.junit.runner.RunWith;
//
//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
//public class RedBlackTree_ESTest extends RedBlackTree_ESTest_scaffolding {
//
//  @Test(timeout = 4000)
//  public void test00()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      int int0 = 2993;
//      redBlackTree0.insert(int0);
//      int int1 = (-27);
//      Node node0 = redBlackTree0.delete(int1);
//      int int2 = (-273);
//      Node node1 = redBlackTree0.insert(int2);
//      redBlackTree0.getMaximum(node1);
//      RedBlackTree.ColorEnum.values();
//      int int3 = 0;
//      redBlackTree0.size = int3;
//      int int4 = 0;
//      redBlackTree0.insert(int4);
//      int int5 = 1;
//      redBlackTree0.insert(int5);
//      String string0 = "<null>";
//      RedBlackTree.ColorEnum.valueOf(string0);
//      int int6 = 31;
//      node1.left = node0;
//      redBlackTree0.insert(int6);
//      redBlackTree0.delete(node1);
//      int int7 = 31;
//      redBlackTree0.insert(int7);
//  }
//
//  @Test(timeout = 4000)
//  public void test01()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      int int0 = 2001;
//      Node node0 = redBlackTree0.insert(int0);
//      node0.right = redBlackTree0.root;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = new RedBlackTree.RedBlackNode(node0.right.value, node0.right, node0, node0.right, ((RedBlackTree.RedBlackNode) node0).color);
//      redBlackTree_RedBlackNode0.left = node0;
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode0);
//      node0.left = redBlackTree0.root;
//      redBlackTree0.getMaximum(node0);
//      int int1 = 0;
//      Integer integer0 = new Integer(int1);
//      node0.left.value = integer0;
//      redBlackTree0.getMinimum(node0);
//      node0.left = (Node) redBlackTree_RedBlackNode0;
//      node0.right = redBlackTree0.root;
//      String string0 = "----- ";
//      RedBlackTree.ColorEnum.valueOf(string0);
//      redBlackTree0.createNode((int) node0.left.value, node0.left, node0.left, node0);
//      String string1 = "net.mooctest.RedBlackTree$RedBlackNode";
//      Integer.parseUnsignedInt(string1);
//      Node node1 = redBlackTree0.insert((int) redBlackTree_RedBlackNode0.value);
//      int int2 = 1496;
//      Integer integer1 = new Integer(int2);
//      Node node2 = new Node(integer1, redBlackTree_RedBlackNode0.left, node1, node0);
//      redBlackTree0.getMaximum(node2);
//  }
//
//  @Test(timeout = 4000)
//  public void test02()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      // Undeclared exception!
//      try { 
//        redBlackTree0.printTree();
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("net.mooctest.AbstractBinaryTree", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test03()  throws Throwable  {
//      RedBlackTree.ColorEnum.values();
//      int int0 = (-1);
//      Integer integer0 = new Integer((-1));
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.printTreePreOrder();
//      Node node0 = redBlackTree0.insert(int0);
//      String string0 = "        ";
//      Integer.getInteger(string0, integer0);
//      node0.right = redBlackTree0.root;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode1 = new RedBlackTree.RedBlackNode(node0.value, node0.right, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0, ((RedBlackTree.RedBlackNode) node0).color);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode1);
//      String string1 = "wUjzI";
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.BLACK;
//      redBlackTree_RedBlackNode0.value = integer0;
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode1);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode1);
//      Node node1 = redBlackTree0.insert((int) node0.right.value);
//      redBlackTree0.rotateLeft(node1);
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode0);
//      String string2 = " \\";
//      RedBlackTree.ColorEnum.valueOf(string2);
//      RedBlackTree.ColorEnum.valueOf(string1);
//      Node node2 = null;
//      redBlackTree0.rotateLeft(node2);
//  }
//
//  @Test(timeout = 4000)
//  public void test04()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      // Undeclared exception!
//      try { 
//        redBlackTree0.rotateRight(redBlackTree_RedBlackNode0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test05()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      Node node0 = redBlackTree0.getSuccessor((Node) redBlackTree_RedBlackNode0);
//      redBlackTree0.rotateRight(node0);
//  }
//
//  @Test(timeout = 4000)
//  public void test06()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      int int0 = 2001;
//      Node node0 = redBlackTree0.insert(int0);
//      node0.right = redBlackTree0.root;
//      Node node1 = redBlackTree0.rotateLeft(node0);
//      node1.left = node0;
//      redBlackTree0.delete(node1);
//      node0.left = redBlackTree0.root;
//      Node node2 = redBlackTree0.getMaximum(node0);
//      int int1 = 0;
//      Integer integer0 = new Integer(int1);
//      node0.left.right = node2;
//      node0.left.value = integer0;
//      redBlackTree0.delete(node0.right);
//      redBlackTree0.getMaximum(node1.left);
//      redBlackTree0.getMinimum(node0);
//      node0.left = node1;
//      node0.right = redBlackTree0.root;
//      String string0 = "----- ";
//      RedBlackTree.ColorEnum.valueOf(string0);
//      redBlackTree0.createNode((int) node0.left.value, node0.left, node0.left, node0);
//      Node node3 = redBlackTree0.insert((int) node1.value);
//      int int2 = 1496;
//      Integer integer1 = new Integer(int2);
//      Node node4 = new Node(integer1, node1.left, node3, node0);
//      redBlackTree0.getMaximum(node4);
//  }
//
//  @Test(timeout = 4000)
//  public void test07()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      // Undeclared exception!
//      try { 
//        RedBlackTree.ColorEnum.valueOf("eBaoyVEb{`^-k-<U");
//        fail("Expecting exception: IllegalArgumentException");
//      
//      } catch(IllegalArgumentException e) {
//         //
//         // No enum constant net.mooctest.RedBlackTree.ColorEnum.eBaoyVEb{`^-k-<U
//         //
//         verifyException("java.lang.Enum", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test08()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode0);
//  }
//
//  @Test(timeout = 4000)
//  public void test09()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.search(2667);
//      // Undeclared exception!
//      try { 
//        redBlackTree0.getMinimum((Node) null);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test10()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.search((-3077));
//      // Undeclared exception!
//      try { 
//        redBlackTree0.getMaximum((Node) null);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test11()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Integer integer0 = new Integer(405);
//      Node node0 = new Node(integer0, (Node) null, (Node) null, (Node) null);
//      // Undeclared exception!
//      try { 
//        redBlackTree0.getMaximum(node0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test12()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      int int0 = 0;
//      Node node0 = redBlackTree0.insert(int0);
//      redBlackTree0.createNode(int0, node0, node0, node0);
//  }
//
//  @Test(timeout = 4000)
//  public void test13()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      int int0 = (-1552);
//      Node node0 = redBlackTree0.insert(int0);
//      int int1 = (-1);
//      int int2 = (-1);
//      Node node1 = redBlackTree0.search(int2);
//      Node node2 = redBlackTree0.createNode(int1, node1, node1, node1);
//      redBlackTree0.delete(node0);
//      node1.parent = redBlackTree0.root;
//      redBlackTree0.rotateRight(node2);
//      redBlackTree0.getMaximum(node2);
//      redBlackTree0.rotateLeft(node1);
//      redBlackTree0.rotateLeft(node1);
//  }
//
//  @Test(timeout = 4000)
//  public void test14()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.search(0);
//      // Undeclared exception!
//      try { 
//        redBlackTree0.rotateLeft((Node) null);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test15()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Node node0 = new Node((Integer) null, (Node) null, (Node) null, (Node) null);
//      // Undeclared exception!
//      try { 
//        redBlackTree0.rotateLeft(node0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test16()  throws Throwable  {
//      RedBlackTree.ColorEnum.values();
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      // Undeclared exception!
//      try { 
//        redBlackTree0.rotateRight((Node) null);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test17()  throws Throwable  {
//      Integer integer0 = new Integer(2627);
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      Node node0 = redBlackTree0.rotateRight(redBlackTree_RedBlackNode0);
//      Node node1 = redBlackTree0.createNode(0, node0, node0, node0);
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode1 = new RedBlackTree.RedBlackNode(integer0, node1, redBlackTree_RedBlackNode0, redBlackTree0.root, redBlackTree_RedBlackNode0.color);
//  }
//
//  @Test(timeout = 4000)
//  public void test18()  throws Throwable  {
//      Integer integer0 = new Integer(0);
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      Node node0 = redBlackTree0.getSuccessor((Node) redBlackTree_RedBlackNode0);
//      Node node1 = redBlackTree0.rotateRight(node0);
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.RED;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode1 = new RedBlackTree.RedBlackNode(integer0, node1, redBlackTree_RedBlackNode0, node1, redBlackTree_ColorEnum0);
//  }
//
//  @Test(timeout = 4000)
//  public void test19()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.delete((Node) null);
//  }
//
//  @Test(timeout = 4000)
//  public void test20()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Integer integer0 = new Integer(0);
//      Node node0 = new Node(integer0, (Node) null, (Node) null, (Node) null);
//      // Undeclared exception!
//      try { 
//        redBlackTree0.delete(node0);
//        fail("Expecting exception: ClassCastException");
//      
//      } catch(ClassCastException e) {
//         //
//         // net.mooctest.Node cannot be cast to net.mooctest.RedBlackTree$RedBlackNode
//         //
//         verifyException("net.mooctest.RedBlackTree", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test21()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      int int0 = (-469);
//      Node node0 = redBlackTree0.insert(int0);
//      redBlackTree0.printTree();
//      Node node1 = redBlackTree0.getMinimum(node0);
//      Node node2 = redBlackTree0.delete(node0);
//      node0.right = node2;
//      redBlackTree0.delete(node1);
//      redBlackTree0.delete(node0);
//  }
//
//  @Test(timeout = 4000)
//  public void test22()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      int int0 = (-1);
//      Integer integer0 = new Integer(1069);
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.BLACK;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = new RedBlackTree.RedBlackNode(integer0, (Node) null, (Node) null, (Node) null, redBlackTree_ColorEnum0);
//      // Undeclared exception!
//      try { 
//        redBlackTree0.delete((Node) redBlackTree_RedBlackNode0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test23()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      RedBlackTree redBlackTree1 = new RedBlackTree();
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.RED;
//      redBlackTree_RedBlackNode0.color = redBlackTree_ColorEnum0;
//      Node node0 = redBlackTree1.getMaximum((Node) redBlackTree_RedBlackNode0);
//      redBlackTree0.createNode((-561), redBlackTree_RedBlackNode0, node0, (Node) null);
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode1 = RedBlackTree.nilNode;
//      redBlackTree0.rotateRight(redBlackTree_RedBlackNode1);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode1);
//      redBlackTree_RedBlackNode1.right = null;
//      // Undeclared exception!
//      try { 
//        RedBlackTree.ColorEnum.valueOf("m/I[A");
//        fail("Expecting exception: IllegalArgumentException");
//      
//      } catch(IllegalArgumentException e) {
//         //
//         // No enum constant net.mooctest.RedBlackTree.ColorEnum.m/I[A
//         //
//         verifyException("java.lang.Enum", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test24()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      int int0 = (-13);
//      Node node0 = redBlackTree0.delete((-13));
//      Node node1 = redBlackTree0.createNode((-13), (Node) null, (Node) null, (Node) null);
//      Node node2 = redBlackTree0.insert(445);
//      int int1 = 0;
//      redBlackTree0.size = int0;
//      Node node3 = redBlackTree0.insert(int1);
//      node3.parent = node1;
//      Integer integer0 = new Integer((int) node3.value);
//      node3.value = integer0;
//      String string0 = "I0<>X4(Rq";
//      Integer.getInteger(string0, node3.value);
//      Node node4 = null;
//      node3.value = node1.value;
//      Node node5 = redBlackTree0.delete(node4);
//      Node node6 = redBlackTree0.getMaximum(node3);
//      Node node7 = redBlackTree0.rotateRight(node5);
//      node7.parent = node2;
//      Node node8 = redBlackTree0.getMaximum(node7);
//      String string1 = "=}<sz/}A>%Nhx){L%&L";
//      RedBlackTree.ColorEnum.valueOf(string1);
//      Node node9 = redBlackTree0.rotateLeft(node4);
//      Node node10 = redBlackTree0.createNode(int1, node4, node7, node4);
//      Node node11 = redBlackTree0.getMinimum(node8);
//      node7.left = node6;
//      RedBlackTree.ColorEnum.values();
//      redBlackTree0.delete(node9);
//      RedBlackTree.ColorEnum.valueOf(string0);
//      Node node12 = redBlackTree0.getMaximum(node10);
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.RED;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = new RedBlackTree.RedBlackNode(node11.value, node5, node0, node12, redBlackTree_ColorEnum0);
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode0);
//      Node node13 = null;
//      redBlackTree0.rotateRight(node13);
//  }
//
//  @Test(timeout = 4000)
//  public void test25()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      // Undeclared exception!
//      try { 
//        redBlackTree0.rotateLeft(redBlackTree_RedBlackNode0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test26()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.printTreePreOrder();
//      redBlackTree0.printTreeInOrder();
//      Integer integer0 = new Integer((-1185));
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.RED;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = new RedBlackTree.RedBlackNode(integer0, (Node) null, (Node) null, (Node) null, redBlackTree_ColorEnum0);
//      redBlackTree_RedBlackNode0.right = null;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode1 = RedBlackTree.nilNode;
//      Node node0 = redBlackTree0.createNode((-1185), redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode1);
//      node0.value = redBlackTree_RedBlackNode1.value;
//      Integer.divideUnsigned((-1185), (-1185));
//      // Undeclared exception!
//      try { 
//        redBlackTree0.rotateRight(node0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test27()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Node node0 = redBlackTree0.root;
//      Node node1 = redBlackTree0.createNode(2474, (Node) null, (Node) null, (Node) null);
//      // Undeclared exception!
//      try { 
//        redBlackTree0.delete(node1);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test28()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Integer integer0 = new Integer(3997);
//      Node node0 = new Node(integer0, (Node) null, (Node) null, (Node) null);
//      redBlackTree0.createNode(3997, node0, node0, node0);
//  }
//
//  @Test(timeout = 4000)
//  public void test29()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.search(0);
//      Node node0 = redBlackTree0.createNode(1, (Node) null, (Node) null, (Node) null);
//      redBlackTree0.createNode(0, node0, (Node) null, (Node) null);
//  }
//
//  @Test(timeout = 4000)
//  public void test30()  throws Throwable  {
//      RedBlackTree.ColorEnum.values();
//      Integer integer0 = new Integer(0);
//      Integer integer1 = Integer.getInteger(" /", integer0);
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Integer.getInteger(" /", 0);
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode0);
//      Node node0 = new Node(integer1, (Node) null, (Node) null, redBlackTree_RedBlackNode0);
//      node0.left = null;
//      Integer.toUnsignedLong((int) node0.value);
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.BLACK;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode1 = new RedBlackTree.RedBlackNode(integer0, node0, node0, (Node) null, redBlackTree_ColorEnum0);
//      redBlackTree0.delete((Node) null);
//  }
//
//  @Test(timeout = 4000)
//  public void test31()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Integer integer0 = new Integer(1750);
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      Node node0 = new Node(integer0, (Node) null, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0);
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.BLACK;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode1 = new RedBlackTree.RedBlackNode(integer0, node0, redBlackTree_RedBlackNode0, node0, redBlackTree_ColorEnum0);
//      Node node1 = redBlackTree0.rotateLeft(redBlackTree_RedBlackNode1);
//      // Undeclared exception!
//      redBlackTree0.getMinimum(node1);
//  }
//
//  @Test(timeout = 4000)
//  public void test32()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      Node node0 = redBlackTree0.createNode(0, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0);
//      Integer integer0 = new Integer(3225);
//      Integer.toUnsignedString((int) node0.value);
//      redBlackTree_RedBlackNode0.value = integer0;
//      // Undeclared exception!
//      try { 
//        redBlackTree0.rotateLeft(node0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test33()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      int int0 = 1;
//      int int1 = (-414);
//      Node node0 = redBlackTree0.insert(int1);
//      Node node1 = redBlackTree0.createNode(int0, node0, node0, node0);
//      node1.right = node0;
//      node0.right = node1;
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.BLACK;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = new RedBlackTree.RedBlackNode(node0.value, redBlackTree0.root, node1, node1, redBlackTree_ColorEnum0);
//      node0.left = (Node) redBlackTree_RedBlackNode0;
//      redBlackTree_RedBlackNode0.value = node0.value;
//      redBlackTree_RedBlackNode0.color = redBlackTree_ColorEnum0;
//      redBlackTree0.insert(int1);
//      Node node2 = redBlackTree0.delete(node0);
//      Node node3 = redBlackTree0.rotateRight(node0);
//      Node node4 = redBlackTree0.insert(int0);
//      node4.left = node3;
//      Node node5 = redBlackTree0.createNode((int) node0.left.value, node4, node4, redBlackTree_RedBlackNode0);
//      node5.value = node0.left.value;
//      node5.left = node2;
//      redBlackTree0.createNode((int) node0.left.value, node5, node0, redBlackTree_RedBlackNode0);
//      redBlackTree0.getMaximum(node2);
//      String string0 = "+i@O_,.1:(Bpi#*Q4";
//      RedBlackTree.ColorEnum.valueOf(string0);
//      redBlackTree0.rotateRight(node2);
//      int int2 = 1787;
//      redBlackTree0.insert(int2);
//      int int3 = 2;
//      redBlackTree0.insert(int3);
//      redBlackTree0.delete(node1.right);
//      String string1 = "*VAF&7*(p`Yp7jo$,";
//      RedBlackTree.ColorEnum.valueOf(string1);
//      redBlackTree0.getMinimum(node2);
//      int int4 = (-2229);
//      int int5 = 1136;
//      Node node6 = redBlackTree0.search(int5);
//      redBlackTree0.createNode(int4, node6, node0.left, node5);
//  }
//
//  @Test(timeout = 4000)
//  public void test34()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.printTreePreOrder();
//      redBlackTree0.printTreePreOrder();
//      int int0 = 1798;
//      Node node0 = redBlackTree0.insert(int0);
//      Node node1 = redBlackTree0.getMinimum(node0);
//      int int1 = (-4009);
//      redBlackTree0.insert(int1);
//      redBlackTree0.getMaximum(node0);
//      redBlackTree0.getMaximum(node1);
//      String string0 = "";
//      RedBlackTree.ColorEnum.valueOf(string0);
//  }
//
//  @Test(timeout = 4000)
//  public void test35()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      Node node0 = new Node((Integer) null, (Node) null, (Node) null, redBlackTree_RedBlackNode0);
//      Node node1 = redBlackTree0.getMaximum(node0);
//      // Undeclared exception!
//      try { 
//        redBlackTree0.delete(node1);
//        fail("Expecting exception: ClassCastException");
//      
//      } catch(ClassCastException e) {
//         //
//         // net.mooctest.Node cannot be cast to net.mooctest.RedBlackTree$RedBlackNode
//         //
//         verifyException("net.mooctest.RedBlackTree", e);
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test36()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      Node node0 = redBlackTree0.createNode((-2676), redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0);
//      Node node1 = null;
//      Node node2 = redBlackTree0.createNode((-2676), (Node) null, (Node) null, (Node) null);
//      node2.parent = node0;
//      // Undeclared exception!
//      try { 
//        redBlackTree0.getMinimum(node2);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test37()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      int int0 = (-2498);
//      Node node0 = redBlackTree0.insert(int0);
//      int int1 = (-283);
//      Node node1 = redBlackTree0.getMinimum(node0);
//      Node node2 = redBlackTree0.createNode(int1, node0, node1, node0);
//      redBlackTree0.rotateLeft(node2);
//      redBlackTree0.rotateRight(node0);
//      redBlackTree0.getMaximum(node1);
//  }
//
//  @Test(timeout = 4000)
//  public void test38()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Node node0 = redBlackTree0.insert(2001);
//      node0.right = redBlackTree0.root;
//      Node node1 = redBlackTree0.rotateLeft(node0);
//      node1.left = node0;
//      redBlackTree0.delete(node1);
//      node0.left = redBlackTree0.root;
//      redBlackTree0.getMaximum(node0);
//      Integer integer0 = new Integer(0);
//      node0.left.value = integer0;
//      redBlackTree0.getMinimum(node0);
//      node0.left = node1;
//      node0.right = redBlackTree0.root;
//      String string0 = "----- ";
//      RedBlackTree.ColorEnum.valueOf(string0);
//      redBlackTree0.createNode((int) node0.left.value, node0.left, node0.left, node0);
//      Node node2 = redBlackTree0.insert((int) node1.value);
//      int int0 = 1496;
//      Integer integer1 = new Integer(int0);
//      Node node3 = new Node(integer1, node1.left, node2, node0);
//      redBlackTree0.getMaximum(node3);
//  }
//
//  @Test(timeout = 4000)
//  public void test39()  throws Throwable  {
//      RedBlackTree.ColorEnum.values();
//      Integer integer0 = new Integer((-1));
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.printTreePreOrder();
//      Node node0 = redBlackTree0.insert((-1));
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.BLACK;
//      Integer.getInteger("        ", integer0);
//      node0.right = redBlackTree0.root;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = new RedBlackTree.RedBlackNode(integer0, node0, redBlackTree0.root, redBlackTree0.root, redBlackTree_ColorEnum0);
//      Node node1 = redBlackTree0.rotateLeft(node0);
//      redBlackTree0.delete(node1);
//      String string0 = "wUjzI";
//      RedBlackTree.ColorEnum.valueOf("wUjzI");
//      redBlackTree_RedBlackNode0.value = integer0;
//      redBlackTree0.getMinimum(node1);
//      redBlackTree0.delete(node1);
//      Node node2 = redBlackTree0.insert((int) node0.right.value);
//      redBlackTree0.rotateLeft(node2);
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode0);
//      String string1 = " \\";
//      RedBlackTree.ColorEnum.valueOf(string1);
//      RedBlackTree.ColorEnum.valueOf(string0);
//      Node node3 = null;
//      redBlackTree0.rotateLeft(node3);
//  }
//
//  @Test(timeout = 4000)
//  public void test40()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      redBlackTree_RedBlackNode0.right = null;
//      // Undeclared exception!
//      try { 
//        redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test41()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      // Undeclared exception!
//      try { 
//        redBlackTree0.getMaximum((Node) redBlackTree_RedBlackNode0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test42()  throws Throwable  {
//      RedBlackTree.ColorEnum.values();
//      Integer integer0 = new Integer(0);
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      Node node0 = redBlackTree0.createNode(0, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0);
//      Node node1 = redBlackTree0.delete(node0);
//      int int0 = 2;
//      node1.left = redBlackTree0.root;
//      Integer integer1 = new Integer((int) node1.value);
//      node0.value = integer1;
//      // Undeclared exception!
//      redBlackTree0.search(2);
//  }
//
//  @Test(timeout = 4000)
//  public void test43()  throws Throwable  {
//      RedBlackTree.ColorEnum.values();
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.printTreeInOrder();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      redBlackTree0.insert((int) redBlackTree_RedBlackNode0.value);
//      Node node0 = redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode0);
//      RedBlackTree.ColorEnum.values();
//      String string0 = null;
//      Integer integer0 = new Integer((-863));
//      node0.parent = redBlackTree0.root;
//      node0.value = integer0;
//      RedBlackTree.ColorEnum.valueOf((String) null);
//      Node node1 = redBlackTree0.delete((Node) redBlackTree_RedBlackNode0);
//      node1.right = redBlackTree0.root;
//      node0.parent = node1.right;
//      Node node2 = redBlackTree0.insert((int) node0.value);
//      String string1 = "xbAZtDYX&%>[gC3o}U";
//      int int0 = (-3001);
//      Integer.getInteger(string1, int0);
//      int int1 = 31;
//      Node node3 = redBlackTree0.createNode(int1, node1, node0, redBlackTree_RedBlackNode0);
//      redBlackTree0.getMinimum(node3);
//      redBlackTree0.getMinimum(node1.right);
//      redBlackTree0.getMinimum(node2);
//      RedBlackTree.ColorEnum.valueOf(string0);
//      redBlackTree0.rotateLeft(node3);
//  }
//
//  @Test(timeout = 4000)
//  public void test44()  throws Throwable  {
//      Integer integer0 = new Integer((-3636));
//      Integer integer1 = null;
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      // Undeclared exception!
//      try { 
//        redBlackTree0.rotateRight(redBlackTree_RedBlackNode0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test45()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Node node0 = redBlackTree0.insert(2993);
//      redBlackTree0.delete(0);
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = (RedBlackTree.RedBlackNode)redBlackTree0.insert((-273));
//      redBlackTree0.rotateRight(node0);
//      redBlackTree_RedBlackNode0.color = ((RedBlackTree.RedBlackNode) node0).color;
//      redBlackTree0.insert(0);
//      RedBlackTree.ColorEnum.values();
//      int int0 = 0;
//      redBlackTree0.size = int0;
//      int int1 = 0;
//      redBlackTree0.insert(int1);
//      String string0 = "<null>";
//      RedBlackTree.ColorEnum.valueOf(string0);
//      int int2 = 31;
//      redBlackTree0.insert(int2);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode0);
//      int int3 = 31;
//      redBlackTree0.insert(int3);
//  }
//
//  @Test(timeout = 4000)
//  public void test46()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Integer integer0 = new Integer(2552);
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      // Undeclared exception!
//      try { 
//        redBlackTree0.rotateLeft(redBlackTree_RedBlackNode0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test47()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Integer integer0 = new Integer(500);
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      Integer integer1 = new Integer((-1646));
//      redBlackTree_RedBlackNode0.value = integer1;
//      // Undeclared exception!
//      try { 
//        redBlackTree0.rotateLeft(redBlackTree_RedBlackNode0);
//        fail("Expecting exception: NullPointerException");
//      
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//      }
//  }
//
//  @Test(timeout = 4000)
//  public void test48()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.insert(2993);
//      redBlackTree0.delete((-27));
//      int int0 = (-273);
//      Node node0 = redBlackTree0.insert(int0);
//      redBlackTree0.getMaximum(node0);
//      RedBlackTree.ColorEnum.values();
//      int int1 = 0;
//      redBlackTree0.size = int1;
//      int int2 = 0;
//      redBlackTree0.insert(int2);
//      String string0 = "<null>";
//      RedBlackTree.ColorEnum.valueOf(string0);
//      int int3 = 31;
//      redBlackTree0.insert(int3);
//      redBlackTree0.delete(node0);
//      int int4 = 31;
//      redBlackTree0.insert(int4);
//  }
//
//  @Test(timeout = 4000)
//  public void test49()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Node node0 = redBlackTree0.insert(2993);
//      redBlackTree0.delete(0);
//      int int0 = (-273);
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = (RedBlackTree.RedBlackNode)redBlackTree0.insert(int0);
//      redBlackTree_RedBlackNode0.color = ((RedBlackTree.RedBlackNode) node0).color;
//      int int1 = 0;
//      redBlackTree0.insert(int1);
//      RedBlackTree.ColorEnum.values();
//      int int2 = 0;
//      redBlackTree0.size = int2;
//      int int3 = 0;
//      redBlackTree0.insert(int3);
//      String string0 = "<null>";
//      RedBlackTree.ColorEnum.valueOf(string0);
//      int int4 = 31;
//      redBlackTree0.insert(int4);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode0);
//      int int5 = 31;
//      redBlackTree0.insert(int5);
//  }
//
//  @Test(timeout = 4000)
//  public void test50()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Node node0 = redBlackTree0.insert(2001);
//      node0.right = redBlackTree0.root;
//      Node node1 = redBlackTree0.rotateLeft(node0);
//      node1.left = node0;
//      node0.left = redBlackTree0.root;
//      redBlackTree0.getMaximum(node0);
//      Integer integer0 = new Integer((int) node0.left.value);
//      node0.left.value = integer0;
//      redBlackTree0.getMinimum(node0);
//      node0.left = node1;
//      node0.right = redBlackTree0.root;
//      String string0 = "----- ";
//      RedBlackTree.ColorEnum.valueOf(string0);
//      redBlackTree0.createNode((int) node0.left.value, node0.left, node0.left, node0);
//      Node node2 = redBlackTree0.insert((int) node1.value);
//      int int0 = 1496;
//      Integer integer1 = new Integer(int0);
//      Node node3 = new Node(integer1, node1.left, node2, node0);
//      redBlackTree0.getMaximum(node3);
//  }
//
//  @Test(timeout = 4000)
//  public void test51()  throws Throwable  {
//      RedBlackTree.ColorEnum.values();
//      Integer integer0 = new Integer((-1));
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.printTreePreOrder();
//      Node node0 = redBlackTree0.insert((-1));
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.BLACK;
//      Integer integer1 = new Integer((int) node0.value);
//      node0.right = redBlackTree0.root;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = new RedBlackTree.RedBlackNode(integer0, node0, redBlackTree0.root, redBlackTree0.root, redBlackTree_ColorEnum0);
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode1 = new RedBlackTree.RedBlackNode(node0.value, node0.right, node0, node0.right, redBlackTree_RedBlackNode0.color);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode1);
//      String string0 = "wUjzI";
//      RedBlackTree.ColorEnum.valueOf("wUjzI");
//      redBlackTree_RedBlackNode0.value = integer0;
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode1);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode1);
//      int int0 = 0;
//      Integer.sum((int) node0.right.value, int0);
//      Node node1 = redBlackTree0.insert((int) node0.right.value);
//      redBlackTree0.rotateLeft(node1);
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode0);
//      String string1 = " \\";
//      RedBlackTree.ColorEnum.valueOf(string1);
//      RedBlackTree.ColorEnum.valueOf(string0);
//      Node node2 = null;
//      redBlackTree0.rotateLeft(node2);
//  }
//
//  @Test(timeout = 4000)
//  public void test52()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Node node0 = redBlackTree0.insert((-711));
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = new RedBlackTree.RedBlackNode(node0.value, node0, redBlackTree0.root, node0, ((RedBlackTree.RedBlackNode) node0).color);
//      redBlackTree0.createNode((int) redBlackTree_RedBlackNode0.value, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode0);
//  }
//
//  @Test(timeout = 4000)
//  public void test53()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      Node node0 = redBlackTree0.insert(2993);
//      Node node1 = redBlackTree0.delete((-27));
//      int int0 = (-273);
//      Node node2 = redBlackTree0.insert(int0);
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = new RedBlackTree.RedBlackNode(node2.value, redBlackTree0.root, redBlackTree0.root, node1, ((RedBlackTree.RedBlackNode) node0).color);
//      RedBlackTree.ColorEnum.values();
//      int int1 = 0;
//      redBlackTree0.size = int1;
//      int int2 = 13;
//      redBlackTree0.insert(int2);
//      int int3 = 1;
//      redBlackTree0.insert(int3);
//      String string0 = "<null>";
//      RedBlackTree.ColorEnum.valueOf(string0);
//      int int4 = 31;
//      node2.left = node1;
//      redBlackTree0.insert(int4);
//      redBlackTree0.delete(node2);
//      int int5 = 31;
//      redBlackTree0.insert(int5);
//  }
//
//  @Test(timeout = 4000)
//  public void test54()  throws Throwable  {
//      RedBlackTree.ColorEnum.values();
//      Integer integer0 = new Integer((-1));
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.printTreePreOrder();
//      Node node0 = redBlackTree0.insert((-1));
//      String string0 = "        ";
//      Integer.getInteger("        ", integer0);
//      node0.right = redBlackTree0.root;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode1 = new RedBlackTree.RedBlackNode(node0.value, node0.right, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0, ((RedBlackTree.RedBlackNode) node0).color);
//      Node node1 = redBlackTree0.delete((Node) redBlackTree_RedBlackNode1);
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.BLACK;
//      redBlackTree_RedBlackNode0.value = integer0;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode2 = new RedBlackTree.RedBlackNode(node0.right.value, node1, redBlackTree_RedBlackNode0, node1, ((RedBlackTree.RedBlackNode) node1).color);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode1);
//      Node node2 = redBlackTree0.insert((int) node0.right.value);
//      redBlackTree0.rotateLeft(node2);
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode0);
//      String string1 = " \\";
//      RedBlackTree.ColorEnum.valueOf(string1);
//      RedBlackTree.ColorEnum.valueOf(string0);
//      Node node3 = null;
//      redBlackTree0.rotateLeft(node3);
//  }
//
//  @Test(timeout = 4000)
//  public void test55()  throws Throwable  {
//      RedBlackTree.ColorEnum.values();
//      Integer integer0 = new Integer((-1));
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.printTreePreOrder();
//      Node node0 = redBlackTree0.insert((-1));
//      Integer.getInteger("WFPY *l", integer0);
//      node0.right = redBlackTree0.root;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode1 = new RedBlackTree.RedBlackNode(node0.value, node0.right, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0, ((RedBlackTree.RedBlackNode) node0).color);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode1);
//      String string0 = "wUjzI";
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.BLACK;
//      redBlackTree_RedBlackNode0.value = integer0;
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode1);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode1);
//      Node node1 = redBlackTree0.insert((int) node0.right.value);
//      redBlackTree0.rotateLeft(node1);
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode0);
//      String string1 = " \\";
//      RedBlackTree.ColorEnum.valueOf(string1);
//      RedBlackTree.ColorEnum.valueOf(string0);
//      Node node2 = null;
//      redBlackTree0.rotateLeft(node2);
//  }
//
//  @Test(timeout = 4000)
//  public void test56()  throws Throwable  {
//      RedBlackTree.ColorEnum.values();
//      Integer integer0 = new Integer((-1));
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.printTreePreOrder();
//      Node node0 = redBlackTree0.insert((-1));
//      Integer.getInteger("        ", integer0);
//      node0.right = redBlackTree0.root;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode1 = new RedBlackTree.RedBlackNode(node0.value, node0.right, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0, ((RedBlackTree.RedBlackNode) node0).color);
//      String string0 = "wUjzI";
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.BLACK;
//      redBlackTree_RedBlackNode0.value = integer0;
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode1);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode1);
//      Node node1 = redBlackTree0.insert((int) node0.right.value);
//      redBlackTree0.rotateLeft(node1);
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode0);
//      String string1 = " \\";
//      RedBlackTree.ColorEnum.valueOf(string1);
//      RedBlackTree.ColorEnum.valueOf(string0);
//      Node node2 = null;
//      redBlackTree0.rotateLeft(node2);
//  }
//
//  @Test(timeout = 4000)
//  public void test57()  throws Throwable  {
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.insert(2993);
//      int int0 = (-27);
//      Node node0 = redBlackTree0.delete((-27));
//      Node node1 = redBlackTree0.insert((-273));
//      redBlackTree0.getMaximum(node1);
//      RedBlackTree.ColorEnum.values();
//      redBlackTree0.size = 0;
//      redBlackTree0.insert(0);
//      redBlackTree0.insert(int0);
//      String string0 = "<null>";
//      RedBlackTree.ColorEnum.valueOf(string0);
//      int int1 = 31;
//      node1.left = node0;
//      redBlackTree0.insert(int1);
//      redBlackTree0.delete(node1);
//      int int2 = 31;
//      redBlackTree0.insert(int2);
//  }
//
//  @Test(timeout = 4000)
//  public void test58()  throws Throwable  {
//      RedBlackTree.ColorEnum.values();
//      Integer integer0 = new Integer((-1));
//      RedBlackTree redBlackTree0 = new RedBlackTree();
//      redBlackTree0.printTreePreOrder();
//      Node node0 = redBlackTree0.insert((-1));
//      Integer.getInteger("        ", integer0);
//      node0.right = redBlackTree0.root;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode0 = RedBlackTree.nilNode;
//      RedBlackTree.RedBlackNode redBlackTree_RedBlackNode1 = new RedBlackTree.RedBlackNode(node0.value, node0.right, redBlackTree_RedBlackNode0, redBlackTree_RedBlackNode0, ((RedBlackTree.RedBlackNode) node0).color);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode1);
//      String string0 = "wUjzI";
//      RedBlackTree.ColorEnum redBlackTree_ColorEnum0 = RedBlackTree.ColorEnum.BLACK;
//      redBlackTree_RedBlackNode0.value = redBlackTree_RedBlackNode1.value;
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode1);
//      redBlackTree0.delete((Node) redBlackTree_RedBlackNode1);
//      Node node1 = redBlackTree0.insert((int) node0.right.value);
//      redBlackTree0.rotateLeft(node1);
//      redBlackTree0.getMinimum((Node) redBlackTree_RedBlackNode0);
//      String string1 = " \\";
//      RedBlackTree.ColorEnum.valueOf(string1);
//      RedBlackTree.ColorEnum.valueOf(string0);
//      Node node2 = null;
//      redBlackTree0.rotateLeft(node2);
//  }
//}
