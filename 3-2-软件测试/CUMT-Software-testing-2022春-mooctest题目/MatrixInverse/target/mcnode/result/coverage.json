[{"nodeName":"method-1-inverse(double[][]) : double[][]","category":"openclover-method","ifCatch":true},{"nodeName":"statement-1-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-2-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-1-inverse(double[][]) : double[][]","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-2-inverse(double[][]) : double[][]","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-3-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-4-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-5-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-3-inverse(double[][]) : double[][]","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-4-inverse(double[][]) : double[][]","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-6-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-5-inverse(double[][]) : double[][]","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-6-inverse(double[][]) : double[][]","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-7-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-8-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-9-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-10-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-11-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-7-inverse(double[][]) : double[][]","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-8-inverse(double[][]) : double[][]","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-12-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-9-inverse(double[][]) : double[][]","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-10-inverse(double[][]) : double[][]","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-13-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-14-inverse(double[][]) : double[][]","category":"openclover-statement","ifCatch":true},{"nodeName":"method-2-solve(double[][]) : void","category":"openclover-method","ifCatch":true},{"nodeName":"statement-15-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-16-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-11-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-12-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-17-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-18-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-13-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-14-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-19-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-20-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-15-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-16-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-21-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-17-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-18-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-22-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-23-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-24-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-19-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-20-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-25-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-26-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-27-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-28-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-29-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-30-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-21-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-22-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-31-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-23-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-24-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-32-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-25-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-26-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-33-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-34-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-35-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-27-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-28-solve(double[][]) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-36-solve(double[][]) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"method-3-isInconsistent(double[][]) : boolean","category":"openclover-method","ifCatch":true},{"nodeName":"statement-37-isInconsistent(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-38-isInconsistent(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-29-isInconsistent(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-30-isInconsistent(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-39-isInconsistent(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-31-isInconsistent(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-32-isInconsistent(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-40-isInconsistent(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-33-isInconsistent(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-34-isInconsistent(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-41-isInconsistent(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-42-isInconsistent(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-35-isInconsistent(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-36-isInconsistent(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-43-isInconsistent(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-44-isInconsistent(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"method-4-hasMultipleSolutions(double[][]) : boolean","category":"openclover-method","ifCatch":true},{"nodeName":"statement-45-hasMultipleSolutions(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-46-hasMultipleSolutions(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-37-hasMultipleSolutions(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-38-hasMultipleSolutions(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-47-hasMultipleSolutions(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-39-hasMultipleSolutions(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-40-hasMultipleSolutions(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-48-hasMultipleSolutions(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-49-hasMultipleSolutions(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-41-hasMultipleSolutions(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-42-hasMultipleSolutions(double[][]) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-50-hasMultipleSolutions(double[][]) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-51-hasMultipleSolutions(double[][]) : boolean","category":"openclover-statement","ifCatch":true}]