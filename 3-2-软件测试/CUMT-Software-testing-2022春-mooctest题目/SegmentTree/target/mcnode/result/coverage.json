[{"nodeName":"method-1-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-method","ifCatch":true},{"nodeName":"statement-1-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-1-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-2-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-2-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-3-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-3-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-4-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-4-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-5-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-statement","ifCatch":false},{"nodeName":"method-2-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-method","ifCatch":true},{"nodeName":"statement-6-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-5-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-6-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-7-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-8-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-7-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-8-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-9-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-10-compare(OverlappingSegment<?>,OverlappingSegment<?>) : int","category":"openclover-statement","ifCatch":true},{"nodeName":"method-3-DynamicSegmentTree(List<D>)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-11-DynamicSegmentTree(List<D>)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-4-DynamicSegmentTree(List<D>,int)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-12-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-9-DynamicSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-10-DynamicSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-13-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-14-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-15-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-11-DynamicSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-12-DynamicSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-16-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-13-DynamicSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-14-DynamicSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-17-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-18-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-19-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-20-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-21-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-15-DynamicSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-16-DynamicSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-22-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-23-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-24-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-25-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-26-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-27-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-28-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-29-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-30-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-31-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-32-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-33-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-34-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-35-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-36-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-37-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-38-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-39-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-40-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-41-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-42-DynamicSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-5-query(long) : D","category":"openclover-method","ifCatch":true},{"nodeName":"statement-43-query(long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"method-6-query(long,long) : D","category":"openclover-method","ifCatch":true},{"nodeName":"statement-44-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-17-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-18-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-45-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-46-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-47-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-48-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-19-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-20-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-49-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-50-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-21-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-22-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-51-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-52-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-53-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-54-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-55-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"method-7-OverlappingSegment(int)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-56-OverlappingSegment(int)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-8-OverlappingSegment(int,long,long,D)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-57-OverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-58-OverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-59-OverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-60-OverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-61-OverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-23-OverlappingSegment(int,long,long,D)","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-24-OverlappingSegment(int,long,long,D)","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-62-OverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-63-OverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-9-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-method","ifCatch":true},{"nodeName":"statement-64-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-65-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-66-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-67-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-68-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-69-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-25-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-26-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-70-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-71-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-27-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-28-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-72-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-73-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-29-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-30-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-74-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-31-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-32-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-75-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-76-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-77-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-33-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-34-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-78-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-35-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-36-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-79-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-80-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-81-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-37-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-38-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-82-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-83-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-84-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-85-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-39-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-40-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-86-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-87-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-88-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-41-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-42-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-89-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-90-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-43-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-44-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-91-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-92-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-93-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-94-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-95-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-96-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-97-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-98-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-99-createFromList(int,List<OverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"method-10-query(long,long) : D","category":"openclover-method","ifCatch":true},{"nodeName":"statement-100-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-101-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-45-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-46-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-102-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-103-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-104-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-47-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-48-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-105-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-49-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-50-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-106-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-107-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-108-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-51-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-52-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-109-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"branch-53-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-54-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-110-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-111-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"branch-55-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-56-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-112-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-113-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"branch-57-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-58-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-114-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"branch-59-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-60-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-115-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-116-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-117-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-118-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-119-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-61-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-62-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-120-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-121-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-122-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-63-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-64-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-123-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-65-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-66-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-124-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-125-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-126-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-67-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-68-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-127-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-128-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-69-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-70-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-129-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-130-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-71-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-72-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-131-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-132-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"method-11-toString() : String","category":"openclover-method","ifCatch":false},{"nodeName":"statement-133-toString() : String","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-134-toString() : String","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-135-toString() : String","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-136-toString() : String","category":"openclover-statement","ifCatch":false},{"nodeName":"method-12-FlatSegmentTree(List<D>)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-137-FlatSegmentTree(List<D>)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-13-FlatSegmentTree(List<D>,int)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-138-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-73-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-74-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-139-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-140-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-141-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-75-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-76-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-142-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-77-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-78-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-143-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-144-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-145-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-79-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-80-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-146-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-147-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-148-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-81-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-82-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-149-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-83-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-84-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-150-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-151-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-152-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-153-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-154-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-85-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-86-FlatSegmentTree(List<D>,int)","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-155-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-156-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-157-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-158-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-159-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-160-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-161-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-162-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-163-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-164-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-165-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-166-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-167-FlatSegmentTree(List<D>,int)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-14-query(long) : D","category":"openclover-method","ifCatch":true},{"nodeName":"statement-168-query(long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"method-15-query(long,long) : D","category":"openclover-method","ifCatch":true},{"nodeName":"statement-169-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-87-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-88-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-170-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-171-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-172-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-173-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-89-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-90-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-174-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-175-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-91-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-92-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-176-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-177-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"method-16-NonOverlappingSegment(int)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-178-NonOverlappingSegment(int)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-17-NonOverlappingSegment(int,D)","category":"openclover-method","ifCatch":false},{"nodeName":"statement-179-NonOverlappingSegment(int,D)","category":"openclover-statement","ifCatch":false},{"nodeName":"method-18-NonOverlappingSegment(int,long,long,D)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-180-NonOverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-181-NonOverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-182-NonOverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-183-NonOverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-184-NonOverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-93-NonOverlappingSegment(int,long,long,D)","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-94-NonOverlappingSegment(int,long,long,D)","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-185-NonOverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-186-NonOverlappingSegment(int,long,long,D)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-19-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-method","ifCatch":true},{"nodeName":"statement-187-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-188-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-189-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-190-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-191-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-192-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-95-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-96-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-193-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-194-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-195-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-97-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-98-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-196-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-197-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-198-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-199-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-99-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-100-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-200-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-201-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-202-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-101-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-102-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-203-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-204-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-103-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-104-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-205-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-206-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-207-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-208-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-209-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-210-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-211-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-212-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-213-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-105-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-106-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-214-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-215-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-216-createFromList(int,List<NonOverlappingSegment<D>>,long,int) : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"method-20-query(long,long) : D","category":"openclover-method","ifCatch":true},{"nodeName":"statement-217-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-107-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-108-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-218-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-109-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-110-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-219-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-220-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-221-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-222-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-111-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-112-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-223-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-113-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-114-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-224-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-225-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"branch-115-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-116-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-226-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-227-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-228-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"branch-117-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-118-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-229-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"branch-119-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-120-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-230-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-231-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-232-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"branch-121-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-122-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-233-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"branch-123-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-124-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-234-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-235-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-236-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-237-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-125-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-126-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-238-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-127-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-128-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-239-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-240-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-241-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-129-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-130-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-242-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-243-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-131-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-132-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-244-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-245-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-133-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-134-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-246-query(long,long) : D","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-247-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-135-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-136-query(long,long) : D","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-248-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-249-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-137-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-138-query(long,long) : D","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-250-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-251-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-252-query(long,long) : D","category":"openclover-statement","ifCatch":true},{"nodeName":"method-21-toString() : String","category":"openclover-method","ifCatch":true},{"nodeName":"statement-253-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-254-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-255-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-256-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"method-22-toString() : String","category":"openclover-method","ifCatch":true},{"nodeName":"statement-257-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-258-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-259-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"method-23-Data(long)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-260-Data(long)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-261-Data(long)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-24-Data(long,long)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-262-Data(long,long)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-263-Data(long,long)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-25-clear() : void","category":"openclover-method","ifCatch":true},{"nodeName":"statement-264-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-265-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"method-26-toString() : String","category":"openclover-method","ifCatch":true},{"nodeName":"statement-266-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-267-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-268-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"method-27-compareTo(Data) : int","category":"openclover-method","ifCatch":true},{"nodeName":"statement-269-compareTo(Data) : int","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-139-compareTo(Data) : int","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-140-compareTo(Data) : int","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-270-compareTo(Data) : int","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-271-compareTo(Data) : int","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-141-compareTo(Data) : int","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-142-compareTo(Data) : int","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-272-compareTo(Data) : int","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-273-compareTo(Data) : int","category":"openclover-statement","ifCatch":false},{"nodeName":"method-28-QuadrantData(long,long)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-274-QuadrantData(long,long)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-29-QuadrantData(long,long,long,long,long)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-275-QuadrantData(long,long,long,long,long)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-276-QuadrantData(long,long,long,long,long)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-277-QuadrantData(long,long,long,long,long)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-278-QuadrantData(long,long,long,long,long)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-279-QuadrantData(long,long,long,long,long)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-30-clear() : void","category":"openclover-method","ifCatch":true},{"nodeName":"statement-280-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-281-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-282-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-283-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-284-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"method-31-copy() : QuadrantData","category":"openclover-method","ifCatch":true},{"nodeName":"statement-285-copy() : QuadrantData","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-286-copy() : QuadrantData","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-287-copy() : QuadrantData","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-288-copy() : QuadrantData","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-289-copy() : QuadrantData","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-290-copy() : QuadrantData","category":"openclover-statement","ifCatch":true},{"nodeName":"method-32-query(long,long) : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-291-query(long,long) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-143-query(long,long) : Data","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-144-query(long,long) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-292-query(long,long) : Data","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-293-query(long,long) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-33-combined(Data) : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-294-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-295-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-145-combined(Data) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-146-combined(Data) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-296-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-297-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-298-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-34-combined(QuadrantData) : void","category":"openclover-method","ifCatch":true},{"nodeName":"statement-299-combined(QuadrantData) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-300-combined(QuadrantData) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-301-combined(QuadrantData) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-302-combined(QuadrantData) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"method-35-hashCode() : int","category":"openclover-method","ifCatch":true},{"nodeName":"statement-303-hashCode() : int","category":"openclover-statement","ifCatch":true},{"nodeName":"method-36-equals(Object) : boolean","category":"openclover-method","ifCatch":true},{"nodeName":"statement-304-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-147-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-148-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-305-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-306-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-307-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-149-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-150-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-308-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-309-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"method-37-toString() : String","category":"openclover-method","ifCatch":true},{"nodeName":"statement-310-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-311-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-312-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-313-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-314-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-315-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-316-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"method-38-RangeMaximumData(long,long)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-317-RangeMaximumData(long,long)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-39-RangeMaximumData(long,N)","category":"openclover-method","ifCatch":false},{"nodeName":"statement-318-RangeMaximumData(long,N)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-319-RangeMaximumData(long,N)","category":"openclover-statement","ifCatch":false},{"nodeName":"method-40-RangeMaximumData(long,long,N)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-320-RangeMaximumData(long,long,N)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-321-RangeMaximumData(long,long,N)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-41-clear() : void","category":"openclover-method","ifCatch":true},{"nodeName":"statement-322-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-323-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"method-42-copy() : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-324-copy() : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-43-query(long,long) : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-325-query(long,long) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-151-query(long,long) : Data","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-152-query(long,long) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-326-query(long,long) : Data","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-327-query(long,long) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-44-combined(Data) : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-328-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-329-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-153-combined(Data) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-154-combined(Data) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-330-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-331-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-332-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-45-combined(RangeMaximumData<N>) : void","category":"openclover-method","ifCatch":true},{"nodeName":"statement-333-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-155-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-156-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-334-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-335-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-157-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-158-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-336-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-337-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-159-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-160-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-338-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-339-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-161-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-162-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-340-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-163-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-164-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-341-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-342-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-165-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-166-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-343-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-167-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-168-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-344-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-345-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-169-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-170-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-346-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-171-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-172-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-347-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-348-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-173-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-174-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-349-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-175-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-176-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-350-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-351-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-177-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-178-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-352-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-179-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-180-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-353-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-354-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-181-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-182-combined(RangeMaximumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-355-combined(RangeMaximumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"method-46-hashCode() : int","category":"openclover-method","ifCatch":true},{"nodeName":"statement-356-hashCode() : int","category":"openclover-statement","ifCatch":true},{"nodeName":"method-47-equals(Object) : boolean","category":"openclover-method","ifCatch":true},{"nodeName":"statement-357-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-183-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-184-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-358-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-359-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-360-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-185-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-186-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-361-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-362-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"method-48-toString() : String","category":"openclover-method","ifCatch":true},{"nodeName":"statement-363-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-364-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-365-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-366-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"method-49-RangeMinimumData(long,long)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-367-RangeMinimumData(long,long)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-50-RangeMinimumData(long,N)","category":"openclover-method","ifCatch":false},{"nodeName":"statement-368-RangeMinimumData(long,N)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-369-RangeMinimumData(long,N)","category":"openclover-statement","ifCatch":false},{"nodeName":"method-51-RangeMinimumData(long,long,N)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-370-RangeMinimumData(long,long,N)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-371-RangeMinimumData(long,long,N)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-52-clear() : void","category":"openclover-method","ifCatch":true},{"nodeName":"statement-372-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-373-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"method-53-copy() : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-374-copy() : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-54-query(long,long) : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-375-query(long,long) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-187-query(long,long) : Data","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-188-query(long,long) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-376-query(long,long) : Data","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-377-query(long,long) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-55-combined(Data) : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-378-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-379-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-189-combined(Data) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-190-combined(Data) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-380-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-381-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-382-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-56-combined(RangeMinimumData<N>) : void","category":"openclover-method","ifCatch":true},{"nodeName":"statement-383-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-191-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-192-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-384-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-385-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-193-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-194-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-386-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-387-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-195-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-196-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-388-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-389-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-197-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-198-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-390-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-199-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-200-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-391-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-392-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-201-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-202-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-393-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-203-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-204-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-394-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-395-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-205-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-206-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-396-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-207-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-208-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-397-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-398-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-209-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-210-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-399-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-211-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-212-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-400-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-401-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-213-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-214-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-402-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-215-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-216-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-403-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-404-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-217-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-218-combined(RangeMinimumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-405-combined(RangeMinimumData<N>) : void","category":"openclover-statement","ifCatch":false},{"nodeName":"method-57-hashCode() : int","category":"openclover-method","ifCatch":true},{"nodeName":"statement-406-hashCode() : int","category":"openclover-statement","ifCatch":true},{"nodeName":"method-58-equals(Object) : boolean","category":"openclover-method","ifCatch":true},{"nodeName":"statement-407-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-219-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-220-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-408-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-409-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-410-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-221-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-222-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-411-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-412-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"method-59-toString() : String","category":"openclover-method","ifCatch":true},{"nodeName":"statement-413-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-414-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-415-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-416-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"method-60-RangeSumData(long,long)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-417-RangeSumData(long,long)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-61-RangeSumData(long,N)","category":"openclover-method","ifCatch":false},{"nodeName":"statement-418-RangeSumData(long,N)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-419-RangeSumData(long,N)","category":"openclover-statement","ifCatch":false},{"nodeName":"method-62-RangeSumData(long,long,N)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-420-RangeSumData(long,long,N)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-421-RangeSumData(long,long,N)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-63-clear() : void","category":"openclover-method","ifCatch":true},{"nodeName":"statement-422-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-423-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"method-64-copy() : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-424-copy() : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-65-query(long,long) : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-425-query(long,long) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-223-query(long,long) : Data","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-224-query(long,long) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-426-query(long,long) : Data","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-427-query(long,long) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-66-combined(Data) : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-428-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-429-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-225-combined(Data) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-226-combined(Data) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-430-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-431-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-432-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-67-combined(RangeSumData<N>) : void","category":"openclover-method","ifCatch":true},{"nodeName":"statement-433-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-227-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-228-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-434-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-435-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-229-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-230-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-436-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-437-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-231-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-232-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-438-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-439-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-233-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-234-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-440-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-441-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-442-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-235-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-236-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-443-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-444-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-445-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-237-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-238-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-446-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-447-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-448-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-239-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-240-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-449-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-450-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-451-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-241-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-242-combined(RangeSumData<N>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-452-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-453-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-454-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-455-combined(RangeSumData<N>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"method-68-hashCode() : int","category":"openclover-method","ifCatch":true},{"nodeName":"statement-456-hashCode() : int","category":"openclover-statement","ifCatch":true},{"nodeName":"method-69-equals(Object) : boolean","category":"openclover-method","ifCatch":true},{"nodeName":"statement-457-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-243-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-244-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-458-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-459-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-460-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-245-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-246-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-461-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-462-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"method-70-toString() : String","category":"openclover-method","ifCatch":true},{"nodeName":"statement-463-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-464-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-465-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-466-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"method-71-IntervalData(long,O)","category":"openclover-method","ifCatch":false},{"nodeName":"statement-467-IntervalData(long,O)","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-468-IntervalData(long,O)","category":"openclover-statement","ifCatch":false},{"nodeName":"method-72-IntervalData(long,long,O)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-469-IntervalData(long,long,O)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-470-IntervalData(long,long,O)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-73-IntervalData(long,long,Set<O>)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-471-IntervalData(long,long,Set<O>)","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-472-IntervalData(long,long,Set<O>)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-74-getData() : Collection<O>","category":"openclover-method","ifCatch":false},{"nodeName":"statement-473-getData() : Collection<O>","category":"openclover-statement","ifCatch":false},{"nodeName":"method-75-clear() : void","category":"openclover-method","ifCatch":true},{"nodeName":"statement-474-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-475-clear() : void","category":"openclover-statement","ifCatch":true},{"nodeName":"method-76-copy() : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-476-copy() : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-477-copy() : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-478-copy() : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-77-query(long,long) : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-479-query(long,long) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-247-query(long,long) : Data","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-248-query(long,long) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-480-query(long,long) : Data","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-481-query(long,long) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-78-combined(Data) : Data","category":"openclover-method","ifCatch":true},{"nodeName":"statement-482-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-483-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-249-combined(Data) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-250-combined(Data) : Data","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-484-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-485-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-486-combined(Data) : Data","category":"openclover-statement","ifCatch":true},{"nodeName":"method-79-combined(IntervalData<O>) : void","category":"openclover-method","ifCatch":true},{"nodeName":"statement-487-combined(IntervalData<O>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-251-combined(IntervalData<O>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-252-combined(IntervalData<O>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-488-combined(IntervalData<O>) : void","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-489-combined(IntervalData<O>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-253-combined(IntervalData<O>) : void","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-254-combined(IntervalData<O>) : void","category":"openclover-branch","ifCatch":false},{"nodeName":"statement-490-combined(IntervalData<O>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-491-combined(IntervalData<O>) : void","category":"openclover-statement","ifCatch":true},{"nodeName":"method-80-hashCode() : int","category":"openclover-method","ifCatch":true},{"nodeName":"statement-492-hashCode() : int","category":"openclover-statement","ifCatch":true},{"nodeName":"method-81-equals(Object) : boolean","category":"openclover-method","ifCatch":true},{"nodeName":"statement-493-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-255-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-256-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-494-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-495-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-496-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-257-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-258-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-497-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-259-equals(Object) : boolean","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-260-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-498-equals(Object) : boolean","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-499-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-500-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-261-equals(Object) : boolean","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-262-equals(Object) : boolean","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-501-equals(Object) : boolean","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-502-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-503-equals(Object) : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"method-82-toString() : String","category":"openclover-method","ifCatch":true},{"nodeName":"statement-504-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-505-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-506-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-507-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"method-83-Segment(int)","category":"openclover-method","ifCatch":true},{"nodeName":"statement-508-Segment(int)","category":"openclover-statement","ifCatch":true},{"nodeName":"method-84-hasChildren() : boolean","category":"openclover-method","ifCatch":true},{"nodeName":"statement-509-hasChildren() : boolean","category":"openclover-statement","ifCatch":true},{"nodeName":"method-85-getLeftChild() : Segment<D>","category":"openclover-method","ifCatch":true},{"nodeName":"statement-510-getLeftChild() : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"method-86-getRightChild() : Segment<D>","category":"openclover-method","ifCatch":true},{"nodeName":"statement-511-getRightChild() : Segment<D>","category":"openclover-statement","ifCatch":true},{"nodeName":"method-87-toString() : String","category":"openclover-method","ifCatch":true},{"nodeName":"statement-512-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-513-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-514-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-515-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-516-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-517-toString() : String","category":"openclover-statement","ifCatch":true},{"nodeName":"method-88-compareTo(Segment<D>) : int","category":"openclover-method","ifCatch":true},{"nodeName":"statement-518-compareTo(Segment<D>) : int","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-263-compareTo(Segment<D>) : int","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-264-compareTo(Segment<D>) : int","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-519-compareTo(Segment<D>) : int","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-520-compareTo(Segment<D>) : int","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-265-compareTo(Segment<D>) : int","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-266-compareTo(Segment<D>) : int","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-521-compareTo(Segment<D>) : int","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-522-compareTo(Segment<D>) : int","category":"openclover-statement","ifCatch":true},{"nodeName":"method-89-getString(SegmentTree<D>) : String","category":"openclover-method","ifCatch":true},{"nodeName":"statement-523-getString(SegmentTree<D>) : String","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-267-getString(SegmentTree<D>) : String","category":"openclover-branch","ifCatch":false},{"nodeName":"branch-268-getString(SegmentTree<D>) : String","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-524-getString(SegmentTree<D>) : String","category":"openclover-statement","ifCatch":false},{"nodeName":"statement-525-getString(SegmentTree<D>) : String","category":"openclover-statement","ifCatch":true},{"nodeName":"method-90-getString(Segment<D>,String,boolean) : String","category":"openclover-method","ifCatch":true},{"nodeName":"statement-526-getString(Segment<D>,String,boolean) : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-527-getString(Segment<D>,String,boolean) : String","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-269-getString(Segment<D>,String,boolean) : String","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-270-getString(Segment<D>,String,boolean) : String","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-528-getString(Segment<D>,String,boolean) : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-529-getString(Segment<D>,String,boolean) : String","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-271-getString(Segment<D>,String,boolean) : String","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-272-getString(Segment<D>,String,boolean) : String","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-530-getString(Segment<D>,String,boolean) : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-531-getString(Segment<D>,String,boolean) : String","category":"openclover-statement","ifCatch":true},{"nodeName":"statement-532-getString(Segment<D>,String,boolean) : String","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-273-getString(Segment<D>,String,boolean) : String","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-274-getString(Segment<D>,String,boolean) : String","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-533-getString(Segment<D>,String,boolean) : String","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-275-getString(Segment<D>,String,boolean) : String","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-276-getString(Segment<D>,String,boolean) : String","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-534-getString(Segment<D>,String,boolean) : String","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-277-getString(Segment<D>,String,boolean) : String","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-278-getString(Segment<D>,String,boolean) : String","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-535-getString(Segment<D>,String,boolean) : String","category":"openclover-statement","ifCatch":true},{"nodeName":"branch-279-getString(Segment<D>,String,boolean) : String","category":"openclover-branch","ifCatch":true},{"nodeName":"branch-280-getString(Segment<D>,String,boolean) : String","category":"openclover-branch","ifCatch":true},{"nodeName":"statement-536-getString(Segment<D>,String,boolean) : String","category":"openclover-statement","ifCatch":true}]